[
  {
    "objectID": "lectures.html",
    "href": "lectures.html",
    "title": "Phylogenetics 101",
    "section": "",
    "text": "About\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPhylogenetics 101\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Course Resources",
    "section": "",
    "text": "Welcome to the world of trees and data!\nI have written extensively on different resources pertaining to working with phylogenetic data and trees on my research website (here). Those interested should check it out and explore the rest of the blog posts there (there are phylogenies).\nHowever for the sake of streamlining this course I will point you to three key resources if you are starting from ground zero or the root of the tree :)\n\n\nIn terms of Books:\n\nLearning From Trees by Luke Harmon. An excellent book on learning the basics and theory in the field of phylogenetic comparative methods.\nPhylogenetic Comparative Methods in R by Liam Revell and Luke Harmon. An amazing R package that is constantly “evolving” and gaining new functions all the time. This package also makes plotting phylogenies wonderful\nThe Phytools Blog by Liam Revell An awesome way to learn more about working with the R package Phytools, in addition to keeping up to date with the new functions and tools\nDecoding Genomes: From Sequences to Phylodynamics by Tanja Stadler, Carsten Magnus, Timothy Vaughan, Joëlle Barido-Sottani, Veronika Bošková, Jana S. Huisman, Jūlija Pečerska. A recent book but from the intro chapters that I have read so far it is very approachable and informative. I love the idea of explaining the whole workflow.\n\n\n\nCourse Structure\nThis course will be structured into 12 weeks each with their own lessons and challenge problems. Each week will build on what was learned in the week prior and add to the level of complexity that you are mastering. There will be assigned book chapters each week and I recommend reading them before beginning the material each week.\nBy the end of the course you should feel comfortable with the following tasks:\n\nLoading phylogenetic data into the R computing environment and plotting it in various formats.\nThe basics of phylogenetic tree inference methods in both a maximum likelihood setting and a bayesian setting.\nUtilizing various methods from the domain of “Phylogenetic Comparative Methods” to answer questions about phenotypic evolution.\nHave some fun figures to show your friends and family.\nA new appreciation for the world around you and how it all fits together."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "Yours instructor on Appledore Island, where Great Black-Back Gulls and Herring Gulls breed in massive numbers\n\n\nHello there my dear friends and welcome to the world trees and data.\n\nA little about me:\nMy name is Jonathan Dain, and I am a Ph.D. student at UMASS Boston working in the VirusPlusLab led by Dr. Nichola Hill. We are a “Disease Ecology” lab focused on answering questions about the recent avian influenza outbreaks in wild birds. My personal interests lie at the intersection of the host virus dynamic. What are the ecological and phylogenetic drivers of avian influenza in the current North American outbreak? What can we learn from the host about infection with this virus in terms of the disease phenotype and immune response? What can we learn from the viral genomes about spread of the virus, host factors affecting spread and much more? Why do some bird species get infected with the virus and die very quickly while others are asymptomatic? How much does the host gene expression impact the spread of this virus into new areas and populations? If you are interested in more of my research check our my academic website here.\n\n\nIn this course:\nProbaly of more interest to you is this course, well let’s get started. The foremost goal of this course is to give you the skills necessary to be a life long learner of phylogenetics both inside and outside the R computational environment. In this course we will explore the following topics:\n\nThe structure and format of phylogenetic trees.\nHow to reconstruct phylogenetic trees using both maximum likelihood and bayesian frameworks.\nThe analysis of phenotypic data along our phylogeny using various models of phenotypic evolution.\nHow to create some beautiful paper ready phylograms.\nThe core concepts and methods of phylodynamics."
  },
  {
    "objectID": "posts/post_template.html",
    "href": "posts/post_template.html",
    "title": "blog post title",
    "section": "",
    "text": "CitationBibTeX citation:@online{dain2024,\n  author = {Dain, Jonathan},\n  title = {Blog Post Title},\n  date = {2024-07-31},\n  url = {https://samanthacsik.github.io/posts/2022-10-24-my-blog-post/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nDain, Jonathan. 2024. “Blog Post Title.” July 31, 2024. https://samanthacsik.github.io/posts/2022-10-24-my-blog-post/."
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Course Lectures",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nAug 2, 2024\n\n\nWeek One/Lecture One\n\n\nJonathan Dain\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Lectures/Lecture_1.html",
    "href": "Lectures/Lecture_1.html",
    "title": "Week One/Lecture One",
    "section": "",
    "text": "The goals of this week are as follows:\n\nInstall Rstudio or update it if needed.\nInstall the R packages necessary for this course.\nLearn what phylogenetic trees represent.\nBuild our own mock phylogenetic tree from scratch.\n\n\n\nFirst off, what even is Rstudio and R?\nR is a computing language that is geared towards statistics (though it can do much more). R has an amazing team of developers through the Comprehensive R Archive Network (CRAN). Rstudio is a graphical user interface (GUI) that makes working in the R computational environment easier and cleaner.\nInstructions for downloading R and Rstudio can be found here in an excerpt from the book “Hands on Programming with R” by Garrett Grolemund. Just download the appropriate verion for your operatig system and you should be setup to go.\n\n\n\nOk what is a package?\nA package is a group of R functions that a developer has put together to help make various tasks or types of analysis standardized in both their documentation and functions. Most packages are hosted on CRAN although some are hosted on github, which only means they need to be installed slightly differently.\nSo let’s download some functions and see what they are about. To begin let’s get a R package that helps make installing the rest of our packages much easier.\n\n# Let's install the R package \"pacman\"\ninstall.packages(\"pacman\")\n\n#Load the package with \nlibrary(pacman)\n\nPacman is a great function because “normally” you would need to install a package with install.packages() and then load them with library(). With Pacman when you use pacman::p_load(), it combines the installation and loading step into one. This function call checks to see if you have a package, installs the package if you don’t already have it, and then loads the package for you.\nSo let’s install the following packages with pacman::p_load().\n\npacman::p_load(\"phytools\", # &lt;- our main package for phylogentics\n               \"tidyverse\", # &lt;- a amazing package for data wrangling and much more. \n               \"ggplot2\", # &lt;- an excellent package for plotting data. \n               \"geiger\") # &lt;- another package needed for dealing with phylogenies. \n\n# Additionally we will install a R package that I built\n# that helps us deal with bird taxonomic names. \npacman::p_install_gh(\"Jonathan-Dain-42/SpeciesClassifyR\")\n\nOk awesome so now all of these packages are installed and loaded into our R environment. Let’s move on to something that actually deals with a tree.\n\n\n\nOk imagine the following scenario. Someone asked your to plot the relationship between a dog, a cat, a duck, and a human.\nWell you might imagine that the dog and cat are relatively closely related. The human would have more in common with the dog and cat than the bird. You might draw something like this:\n\n\n\nMy silly handrawn tree\n\n\nThat looks nice but how do we get that into a computer? Luckly for us some really smart people have developed a way to encode that information on relatedness into something called a Newick String. Which was developed by Joseph Felsenstein. We can make our own tree in newick format as follows:\n\nour_tree &lt;- phytools::read.newick(text = \"(Duck,(Human,(Dog,Cat)));\")\n\nNotice that the string works from the closest related organisms in the innermost parenthesis and then working outword. Let’s take a look at the structure of this tree to really see the inside of the object.\n\nprint(our_tree)\n\n\nPhylogenetic tree with 4 tips and 3 internal nodes.\n\nTip labels:\n  Duck, Human, Dog, Cat\n\nRooted; no branch lengths.\n\nstr(our_tree)\n\nList of 5\n $ edge       : num [1:6, 1:2] 5 5 6 6 7 7 1 6 2 7 ...\n $ Nnode      : int 3\n $ tip.label  : chr [1:4] \"Duck\" \"Human\" \"Dog\" \"Cat\"\n $ edge.length: NULL\n $ node.label : NULL\n - attr(*, \"class\")= chr \"phylo\"\n - attr(*, \"order\")= chr \"cladewise\"\n\n\nThese “trees” are really just a series of lists within lists. There are edges that connect nodes (both internal and terminal), there are tip.labels that contain the label of the “leafs” of the tree, and finally there are Nnodes which are the internal nodes of the tree. Notice that a tree will always have a number of nodes that equals ntips - 1.\nOk let’s actually plot it - the fun part of making any tree - using functions in phytools. Dr. Revell’s package provides and incredible array of plotting types lets use plotTree() for now.\n\nphytools::plotTree(tree = our_tree,lwd=5)\n\n\n\n\n\n\n\n\nWow that looks pretty nice! Lets make it look even better. I will just do a few simple things and then comment what I am doing to get you started.\n\nplotTree(tree = our_tree, #our tree\n         lwd=6, # changed the line width setting\n         ftype=\"i\") # made the font italics. \n\n#now I am goint to save the x/y coordinates of the tree\npp &lt;- pp&lt;-get(\"last_plot.phylo\",envir=.PlotPhyloEnv)\n\n# now plot another tree ontop of our first one to make an outline affect. \nplotTree(tree = our_tree, # again our tree\n         lwd=3, # change the line width\n         color=\"grey\", # make it a specific color\n         add=T, #plot it on top of our existing plot\n         xlim=pp$x.lim, #use the coordinates for the other \n         ylim=pp$y.lim, # use the coordinates for the other \n         ftype=\"off\") # turn off the text on tip.labels\n\n# add a little label. Don't worry we will learn to do this\nmtext(text = \"Figure 1: 'Our silly first tree'\",side = 1,\n      line = -3.5,\n      adj = .5)\n\n\n\n\n\n\n\n\n\n\n\nThis was week one! Wow so simple right? Yes it was thats the beauty of it. We will begin to work with much more complicated material in due time. For now relax and take it all in.\nRead Chapters 1 of “Learning from Trees” and Chapter 1 of “Phytools” before next time.\n\n\n\nCan you create a phylogeny of the following taxa using a newick string?\nHere are the names you should use. I left them in their latin form just for fun. I would recommend Googling them to find their identity.\n\nchallenge.names\n\n [1] \"Bos_taurus\"             \"Carassius_auratus\"      \"Carcharodon_carcharias\"\n [4] \"Homo_sapiens\"           \"Iguana_iguana\"          \"Latimeria_chalumnae\"   \n [7] \"Lemur_catta\"            \"Megaptera_novaeangliae\" \"Myotis_lucifugus\"      \n[10] \"Sus_scrofa\"             \"Turdus_migratorius\""
  },
  {
    "objectID": "Lectures/Lecture_1.html#welcome-to-week-one-of-phylogenetics-101",
    "href": "Lectures/Lecture_1.html#welcome-to-week-one-of-phylogenetics-101",
    "title": "Week One/Lecture One",
    "section": "",
    "text": "The goals of this week are as follows:\n- Install Rstudio or update it if needed. - Install the R packages necessary for this course. - Learn what phylogenetic trees represent. - Build our own mock phylogenetic tree from scratch."
  },
  {
    "objectID": "Lectures/Lecture_1.html#installing-rstudio",
    "href": "Lectures/Lecture_1.html#installing-rstudio",
    "title": "Week One/Lecture One",
    "section": "",
    "text": "First off, what even is Rstudio and R?\nR is a computing language that is geared towards statistics (though it can do much more). R has an amazing team of developers through the Comprehensive R Archive Network (CRAN). Rstudio is a graphical user interface (GUI) that makes working in the R computational environment easier and cleaner.\nInstructions for downloading R and Rstudio can be found here in an excerpt from the book “Hands on Programming with R” by Garrett Grolemund. Just download the appropriate verion for your operatig system and you should be setup to go."
  },
  {
    "objectID": "Lectures/Lecture_1.html#installing-the-r-packages-helpful-for-the-course",
    "href": "Lectures/Lecture_1.html#installing-the-r-packages-helpful-for-the-course",
    "title": "Week One/Lecture One",
    "section": "",
    "text": "Ok what is a package?\nA package is a group of R functions that a developer has put together to help make various tasks or types of analysis standardized in both their documentation and functions. Most packages are hosted on CRAN although some are hosted on github, which only means they need to be installed slightly differently.\nSo let’s download some functions and see what they are about. To begin let’s get a R package that helps make installing the rest of our packages much easier.\n\n# Let's install the R package \"pacman\"\ninstall.packages(\"pacman\")\n\n#Load the package with \nlibrary(pacman)\n\nPacman is a great function because “normally” you would need to install a package with install.packages() and then load them with library(). With Pacman when you use pacman::p_load(), it combines the installation and loading step into one. This function call checks to see if you have a package, installs the package if you don’t already have it, and then loads the package for you.\nSo let’s install the following packages with pacman::p_load().\n\npacman::p_load(\"phytools\", # &lt;- our main package for phylogentics\n               \"tidyverse\", # &lt;- a amazing package for data wrangling and much more. \n               \"ggplot2\", # &lt;- an excellent package for plotting data. \n               \"geiger\") # &lt;- another package needed for dealing with phylogenies. \n\n# Additionally we will install a R package that I built\n# that helps us deal with bird taxonomic names. \npacman::p_install_gh(\"Jonathan-Dain-42/SpeciesClassifyR\")\n\nOk awesome so now all of these packages are installed and loaded into our R environment. Let’s move on to something that actually deals with a tree."
  },
  {
    "objectID": "Lectures/Lecture_1.html#your-first-tree",
    "href": "Lectures/Lecture_1.html#your-first-tree",
    "title": "Week One/Lecture One",
    "section": "",
    "text": "Ok imagine the following scenario. Someone asked your to plot the relationship between a dog, a cat, a duck, and a human.\nWell you might imagine that the dog and cat are relatively closely related. The human would have more in common with the dog and cat than the bird. You might draw something like this:\n\n\n\nMy silly handrawn tree\n\n\nThat looks nice but how do we get that into a computer? Luckly for us some really smart people have developed a way to encode that information on relatedness into something called a Newick String. Which was developed by Joseph Felsenstein. We can make our own tree in newick format as follows:\n\nour_tree &lt;- phytools::read.newick(text = \"(Duck,(Human,(Dog,Cat)));\")\n\nNotice that the string works from the closest related organisms in the innermost parenthesis and then working outword. Let’s take a look at the structure of this tree to really see the inside of the object.\n\nprint(our_tree)\n\n\nPhylogenetic tree with 4 tips and 3 internal nodes.\n\nTip labels:\n  Duck, Human, Dog, Cat\n\nRooted; no branch lengths.\n\nstr(our_tree)\n\nList of 5\n $ edge       : num [1:6, 1:2] 5 5 6 6 7 7 1 6 2 7 ...\n $ Nnode      : int 3\n $ tip.label  : chr [1:4] \"Duck\" \"Human\" \"Dog\" \"Cat\"\n $ edge.length: NULL\n $ node.label : NULL\n - attr(*, \"class\")= chr \"phylo\"\n - attr(*, \"order\")= chr \"cladewise\"\n\n\nThese “trees” are really just a series of lists within lists. There are edges that connect nodes (both internal and terminal), there are tip.labels that contain the label of the “leafs” of the tree, and finally there are Nnodes which are the internal nodes of the tree. Notice that a tree will always have a number of nodes that equals ntips - 1.\nOk let’s actually plot it - the fun part of making any tree - using functions in phytools. Dr. Revell’s package provides and incredible array of plotting types lets use plotTree() for now.\n\nphytools::plotTree(tree = our_tree,lwd=5)\n\n\n\n\n\n\n\n\nWow that looks pretty nice! Lets make it look even better. I will just do a few simple things and then comment what I am doing to get you started.\n\nplotTree(tree = our_tree, #our tree\n         lwd=6, # changed the line width setting\n         ftype=\"i\") # made the font italics. \n\n#now I am goint to save the x/y coordinates of the tree\npp &lt;- pp&lt;-get(\"last_plot.phylo\",envir=.PlotPhyloEnv)\n\n# now plot another tree ontop of our first one to make an outline affect. \nplotTree(tree = our_tree, # again our tree\n         lwd=3, # change the line width\n         color=\"grey\", # make it a specific color\n         add=T, #plot it on top of our existing plot\n         xlim=pp$x.lim, #use the coordinates for the other \n         ylim=pp$y.lim, # use the coordinates for the other \n         ftype=\"off\") # turn off the text on tip.labels\n\n# add a little label. Don't worry we will learn to do this\nmtext(text = \"Figure 1: 'Our silly first tree'\",side = 1,\n      line = -3.5,\n      adj = .5)"
  },
  {
    "objectID": "Lectures/Lecture_1.html#closing-remarks",
    "href": "Lectures/Lecture_1.html#closing-remarks",
    "title": "Week One/Lecture One",
    "section": "",
    "text": "This was week one! Wow so simple right? Yes it was thats the beauty of it. We will begin to work with much more complicated material in due time. For now relax and take it all in.\nRead Chapters 1 of “Learning from Trees” and Chapter 1 of “Phytools” before next time."
  },
  {
    "objectID": "Lectures/Lecture_1.html#challenge-problem",
    "href": "Lectures/Lecture_1.html#challenge-problem",
    "title": "Week One/Lecture One",
    "section": "",
    "text": "Can you create a phylogeny of the following taxa using a newick string?\nHere are the names you should use. I left them in their latin form just for fun. I would recommend Googling them to find their identity.\n\nchallenge.names\n\n [1] \"Bos_taurus\"             \"Carassius_auratus\"      \"Carcharodon_carcharias\"\n [4] \"Homo_sapiens\"           \"Iguana_iguana\"          \"Latimeria_chalumnae\"   \n [7] \"Lemur_catta\"            \"Megaptera_novaeangliae\" \"Myotis_lucifugus\"      \n[10] \"Sus_scrofa\"             \"Turdus_migratorius\""
  }
]